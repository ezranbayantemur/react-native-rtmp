name: Build

on:
  pull_request:
    branches:
      - master
      - dev

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      #   name: List the state of node modules
      #   continue-on-error: true
      #   run: npm list

      # - name: Cache Pods
      #   id: cache-pods
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: cache-cocoapods
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-

      # - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      #   name: List the state of node modules
      #   continue-on-error: true
      #   run: npm list

      - name: Install dependencies
        run: |
          yarn

      - name: Lint files
        run: |
          yarn lint

      - name: Typescript checking
        run: |
          yarn typescript

      - name: Unit tests
        run: |
          yarn test --coverage --updateSnapshot --verbose

      - name: Building package
        run: |
          yarn prepare

      # - name: Building Android
      #   run: |
      #     cd example/android && ./gradlew build && cd ..

      # - name: Install Cocoapods
      #   run: sudo gem install -n /usr/local/bin cocoapods

      # - name: Install Pods
      #   run: |
      #     cd ios && pod install

      # - name: Build iOS
      #   run: |
      #     cd example/ios && xcodebuild -workspace RtmpExample.xcworkspace -scheme RtmpExample -destination generic/platform=iOS build
